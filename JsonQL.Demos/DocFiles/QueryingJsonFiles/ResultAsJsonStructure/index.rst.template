========================
Result as JSON Structure 
========================

.. contents::
   :local:
   :depth: 2

- The overloaded methods **QueryJsonValue** in interface `JsonQL.Query.IQueryManager <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Query/IQueryManager.cs>`_ can be used to to query one or more JSON files using a JsonQL query expressions and return the result as a JSON structure.
    
    .. note::
            See :doc:`../../ImportantInterfaces/IJsonValueQueryResult/index` for more details on data structure used for the result.
    
- The result of a query is stored in an instance of C# interface `JsonQL.Query.IJsonValueQueryResult <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Query/IJsonValueQueryResult.cs>`_.
- Interface `JsonQL.Query.IJsonValueQueryResult <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Query/IJsonValueQueryResult.cs>`_ has a property **CompilationErrors** of type `JsonQL.Compilation.ICompilationErrorItem <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Compilation/ICompilationErrorItem.cs>`_ that stores data about query execution errors, if any.
    .. note::
        The errors might contain both errors in queried files, if queried files use JsonQL expressions (or are not well formed), as well as errors in query itself, or errors encountered when converting result JSON to a C# object.

- Interface `JsonQL.Query.IJsonValueQueryResult <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Query/IJsonValueQueryResult.cs>`_ has a property **ParsedValue** of type `JsonQL.JsonObjects.IParsedValue <https://github.com/artakhak/JsonQL/blob/main/JsonQL/JsonObjects/IParsedValue.cs>`_ that stores query result as a JSON object.

- One ore more JSON files can be specified as parameters to be used when looking up JSON values referenced by JsonQL expressions.
- If many JSON files are specified the following rules and techniques are used:
  - Parent/child relationships between JSON files is maintained and parent JSON files are evaluated before child JSON files are evaluated.
  - Lookup of JSON values specified in JsonQL expressions starts in JSON containing the expression first, and then in parent JSON files.
   
.. note::
    For more examples look at examples at these links:
        - `Successful query examples in JsonQL.Demos project <https://github.com/artakhak/JsonQL/tree/main/JsonQL.Demos/Examples/IQueryManagerExamples/SuccessExamples>`_
        - `Failed query examples in JsonQL.Demos project <https://github.com/artakhak/JsonQL/tree/main/JsonQL.Demos/Examples/IQueryManagerExamples/FailureExamples/ResultAsObject>`_
        - `Examples in JsonQL.Tests project <https://github.com/artakhak/JsonQL/tree/main/JsonQL.Tests/QueryManager/ResultAsParsedJsonValue>`_

.. note::
    Querying JSON with result as a JSON structure is pretty similar to querying JSON with result as C# object describes in section :doc:`../ResultAsCSharpObject/index`. The query expressions use exactly the same format. The only difference is the format of the result generated by JsonQL. Querying JSON with result as C# object involves conversion from JSON to C# classes provided by the user, and therefore the API is more involved (more ways to configure the conversion process and report errors).

.. toctree::

   ../../ImportantInterfaces/IJsonValueQueryResult/index.rst
   Examples/index.rst
   ErrorDetails/index.rst
   SampleFiles/index.rst
