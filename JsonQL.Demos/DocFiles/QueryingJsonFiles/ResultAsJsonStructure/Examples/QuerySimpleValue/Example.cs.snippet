string[] sharedExamplesFolderPath = ["DocFiles", "QueryingJsonFiles", "JsonFiles"];
        
var query =
    "Average(Companies.Select(c => c.Employees.Where(e => e.Name != 'John Smith').Select(e => e.Salary)))";

// Set the value of queryManager to an instance of JsonQL.Query.IQueryManager here.
// The value of JsonQL.Query.IQueryManager is normally created by Dependency Injection container 
// and it is normally configured as a singleton.
JsonQL.Query.IQueryManager queryManager = null!;

var averageSalaryResult =
    queryManager.QueryJsonValue(query, new JsonTextData("Companies",
        LoadJsonFileHelpers.LoadJsonFile("Companies.json", sharedExamplesFolderPath)));

Assert.That(averageSalaryResult, Is.Not.Null);
Assert.That(averageSalaryResult.CompilationErrors.Count, Is.EqualTo(0));
Assert.That(averageSalaryResult.ParsedValue, Is.Not.Null);

// We don't care about the null / conversion exception in this example for brevity.
var parsedSimpleValue = (IParsedSimpleValue)averageSalaryResult.ParsedValue!;

Assert.That(parsedSimpleValue.IsString, Is.False);
Assert.That(parsedSimpleValue.Value, Is.EqualTo("102356.75"));
