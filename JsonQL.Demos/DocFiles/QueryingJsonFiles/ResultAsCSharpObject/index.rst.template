===================
Result as C# Object
===================
.. contents::
   :local:
   :depth: 2

- The overloaded methods **QueryObject** in interface `JsonQL.Query.IQueryManager <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Query/IQueryManager.cs>`_ and similarly named overloaded extension methods with generic parameter **QueryObject<TQueryObject>** in `JsonQL.Query.QueryManagerExtensions <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Query/QueryManagerExtensions.cs>`_ can be used to to query one or more JSON files using a JsonQL query expressions.

.. note::
    - The extension methods with generic parameter **TQueryObject** are easier to use. The methods in `JsonQL.Query.IQueryManager <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Query/IQueryManager.cs>`_ might be easier to use with reflection.
    - Moving forward the extension methods will be discussed.

- The result of a query is stored in an instance of `JsonQL.Query.IObjectQueryResult<TQueryObject> <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Query/IObjectQueryResult.cs>`_ a C# interface, where  **TQueryObject** is the value of generic type argument passed to one of overloaded methods **QueryObject<TQueryObject>**.
- Interface `JsonQL.Query.IObjectQueryResult<TQueryObject> <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Query/IObjectQueryResult.cs>`_ has a property **ErrorsAndWarnings** of type `JsonQL.Query.IQueryResultErrorsAndWarnings <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Query/IQueryResultErrorsAndWarnings.cs>`_ that stores data about query execution errors, if any.
    
    .. note::
        The errors might contain both errors in queried files, if queried files use JsonQL expressions (or are not well formed), as well as errors in query itself, or errors encountered when converting result JSON to a C# object.

- Interface `JsonQL.Query.IObjectQueryResult<TQueryObject> <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Query/IObjectQueryResult.cs>`_ has a property **Value** of generic type **TQueryObject** which contains de-serialized query result.
- The type parameter **TQueryObject** specified in overloaded query methods **TQueryObject** in `JsonQL.Query.QueryManagerExtensions <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Query/QueryManagerExtensions.cs>`_ specifies the type to which the query result should be converted. 
    
    - **TQueryObject** can be any class (value or reference type) including collection types.
    - Both interface and implementation class can be used for **TQueryObject**.
    - Nullable syntax **?** can be specified with type argument value for **TQueryObject**: this includes also using nullable syntax for collection item types, if return type is a collection.
    - If collection type is used for type parameter **TQueryObject** in a call to **IJsonQL.Query.QueryManager.QueryObject<TQueryObject>** method, the collection item parameters can be interfaces or classes as well (both value or reference type). 

- One ore more JSON files can be specified as parameters to be used when looking up JSON values referenced by JsonQL expressions.
- If many JSON files are specified the following rules and techniques are used:
  - Parent/child relationships between JSON files is maintained and parent JSON files are evaluated before child JSON files are evaluated.
  - Lookup of JSON values specified in JsonQL expressions starts in JSON containing the expression first, and then in parent JSON files.
   
.. note::
    For more examples look at examples at these links:
        - `Successful query examples in JsonQL.Demos project <https://github.com/artakhak/JsonQL/tree/main/JsonQL.Demos/Examples/IQueryManagerExamples/SuccessExamples>`_
        - `Failed query examples in JsonQL.Demos project <https://github.com/artakhak/JsonQL/tree/main/JsonQL.Demos/Examples/IQueryManagerExamples/FailureExamples/ResultAsObject>`_
        - `Examples in JsonQL.Tests project <https://github.com/artakhak/JsonQL/tree/main/JsonQL.Tests/QueryManager/ResultAsObject>`_

.. toctree::

   Examples/index.rst
   ErrorDetails/index.rst
   TypeBinding/index.rst
   NullableValueSupport/index.rst
   ConversionSettings/index.rst
   SampleFiles/index.rst
