// Select the employees in all companies with non-null value for Address
var query = 
    "Companies.Select(c => c.Employees).Where(e => e.Address is not null)";

// Set the value of queryManager to an instance of JsonQL.Query.IQueryManager here.
// The value of JsonQL.Query.IQueryManager is normally created by Dependency Injection container 
// and it is normally configured as a singleton.
JsonQL.Query.IQueryManager queryManager = null!;

// Employees in employeesResult.Value of type IReadOnlyList<IEmployee> can have null for 
// property IEmployee.Manager since this property is of type "IManager?" (uses nullable syntax)
// Also, the values of IEmployee.Address.County can be null in result too
// since the property IAddress.County is of type "string?" (nullable string)
var employeesResult =
    queryManager.QueryObject<IReadOnlyList<IEmployee>>(query,
        new JsonTextData("Companies",
            LoadJsonFileHelpers.LoadJsonFile("Companies.json", ["DocFiles", "QueryingJsonFiles", "JsonFiles"])));