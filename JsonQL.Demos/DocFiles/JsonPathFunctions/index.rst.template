===================
JSON Path Functions
===================

.. contents::
   :local:
   :depth: 2
   
.. toctree::

   ArrayIndexers/index.rst
   At/index.rst
   First/index.rst
   Last/index.rst
   Where/index.rst 
   Select/index.rst
   Flatten/index.rst
   Reverse/index.rst
   
- JsonQL path functions are used along with one or more  '.' separators (i.e., multiple functions can be applied in sequence) to access values in JSON files. 
- The sections below describe the available JsonQL path functions, but the example below is a simple example demonstrating use of multiple chained functions (i.e., 'Where' and 'First') along with chained access to JSON objects and fields (i.e, 'Employees', and 'Address') :
- There is no limit on how many times you may apply the JSON path functions, or access JSON objects and fields in chained manner.

Example
-------

.. note:: The following JSON files are referenced in JsonQL expressions in **Example.json** in example below:  :doc:`../MutatingJsonFiles/SampleFiles/employees`.

**Example.json** below demonstrates using optional and named parameters with JsonQL.

.. sourcecode:: json

    <IncludedFilePlaceHolder>Example\Example.json</IncludedFilePlaceHolder>
    
The result (i.e., an instance of `JsonQL.Compilation.ICompilationResult <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Compilation/ICompilationResult.cs>`_) is serialized to a **Result.json** file below.

.. note::
    For brevity, the serialized result includes only serialized evaluated **Example.json** and does not include parent JSON files in **JsonQL.Compilation.ICompilationResult.CompiledJsonFiles**
 
.. sourcecode:: json

    <IncludedFilePlaceHolder>Example\Result.json</IncludedFilePlaceHolder>
   
The code snippet shows how the JSON file **Example.json** was parsed using `JsonQL.Compilation.IJsonCompiler <https://github.com/artakhak/JsonQL/blob/main/JsonQL/Compilation/IJsonCompiler.cs>`_

.. sourcecode:: csharp

    <IncludedFilePlaceHolder>Example\Example.cs.snippet</IncludedFilePlaceHolder>