{
  "TestData": [ 1, 5, 8, 17, "Test" ],

  "CustomBinaryOperator_+-_1": "(TestData[0] +- TestData[2])=$(TestData[0] +- TestData[2])==-9",
  "CustomBinaryOperator_+-_2": "(-TestData[0] +- -TestData[2])=$(-TestData[0] +- -TestData[2])==9",
  "CustomPrefixOperator_++2": "(++2 TestData[2])=$(++2 TestData[2])==10",
  "CustomPostfixOperator_is_even": "(TestData[2] is even)=$(TestData[2] is even)==true",

  "CustomFunction_ReverseTextAndAddMarkers_1": "ReverseTextAndAddMarkers(TestData[4])='$(ReverseTextAndAddMarkers(TestData[4]))' == '#tseT#'",
  "CustomFunction_ReverseTextAndAddMarkers_2": "'ReverseTextAndAddMarkers(TestData[4], true)=$(ReverseTextAndAddMarkers(TestData[4], true))' == '#tseT#'",
  "CustomFunction_ReverseTextAndAddMarkers_3": "ReverseTextAndAddMarkers(TestData[4], false)='$(ReverseTextAndAddMarkers(TestData[4], false))' == 'tseT'",
  "CustomFunction_ReverseTextAndAddMarkers_4": "ReverseTextAndAddMarkers(value->TestData[4], addMarkers->true)='$(ReverseTextAndAddMarkers(value->TestData[4], addMarkers->true))' == '#tseT#'",
  "CustomFunction_ReverseTextAndAddMarkers_5": "ReverseTextAndAddMarkers(addMarkers->false, value->TestData[4])='$(ReverseTextAndAddMarkers(addMarkers->false, value->TestData[4]))' == 'tseT'",

  "CustomSpecialFunction_JsonQLReleaseDate": "JsonQLReleaseDate is '$(JsonQLReleaseDate)'. The type of value of 'JsonQLReleaseDate' function is '$(typeof JsonQLReleaseDate)'.",
  "CustomMultipleItemsSelectorExample_SelectEvenIndexes": "$value(Companies.Select(x => x.Employees).Flatten().SelectEvenIndexes(x => x.Id != 100000001).Where(x => x.Salary > 89000))",
  "CustomSingleItemSelectorExample_SecondItemSelector": "Second employee name with salary less than 100K is '$(Companies[0].Employees.Second(x => x.Salary < 100000).Name)'=='Michael Brown'"
}
