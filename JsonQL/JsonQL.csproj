<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>

		<PackageVersion>1.1.0</PackageVersion>
		<Version>1.1.0</Version>
		<PackageTags>Json Json+Query+Language Json+path</PackageTags>
		<Authors>Artak Hakobyan</Authors>
		<Company>OROptimizer</Company>
		<Description>
			JsonQL is a powerful JSON query language implementation that provides a flexible way to query and manipulate JSON data using a SQL-like syntax with rich function support.
		</Description>
		<Copyright>Copyright 2018 (c) OROptimizer. All rights reserved.</Copyright>
		<PackageReleaseNotes>
            Added support for expressions in Select statements. Before, Select statements could have only JSON paths (e.g., Employees.Select(x => x.Salary)).

            With these changes Select statements can have any expressions that evaluate to one of the types: String, Double, Boolean and DateTime.

            Examples:
            {"EmployeeRaisedSalaries": ""$value(Employees.Select(x => 1.1 * x.Salary))"}

            {"RaisedSalariesOfAllCompanyEmployees": "$value(parent.Object1.Companies.Select(c => c.Where(x => HasField(x, 'EmployeeId')).Select(e => 2 * e.Salary).Where(s => s > 170000)))"}

            {"MaxSalariesOfCompanies": "$value(parent.Object1.Companies.Select(c => Max(c.Where(x => HasField(x, 'EmployeeId')).Select(e => e.Salary))))"}

            {"CompanyNamesWithMaxSalary": "$value(parent.Object1.Companies.Select(c => Concatenate(c[0].Name, ', MaxSalary:', Max(c.Where(e => index > 0).Select(e => e.Salary)))))",
            "DateTimeExpressionsInSelect": "$value(Object1.DateTimeValues.Select(x => ToDate(x)))"}

            {"BooleanExpressionsInSelect": "$value(parent.Object1.Companies.Select(c => 150000 == Max(c.Where(x => HasField(x, 'EmployeeId')).Select(e => e.Salary))))"}
		</PackageReleaseNotes>
		<RepositoryUrl>https://github.com/artakhak/JsonQL</RepositoryUrl>
		<PackageProjectUrl>https://github.com/artakhak/JsonQL</PackageProjectUrl>
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
		<Title>JsonQL</Title>
		<PackageReadmeFile>README.md</PackageReadmeFile>
	</PropertyGroup>

	<ItemGroup>
		<None Include="README.md" Pack="true" PackagePath=""/>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="OROptimizer.Shared" Version="2.5.0" />
		<!--<ProjectReference Include="..\..\OROptimizer.Shared\OROptimizer.Shared\OROptimizer.Shared.csproj" />-->

		<PackageReference Include="UniversalExpressionParser" Version="1.1.0" />
		<!--<ProjectReference Include="..\..\UniversalExpressionParser\UniversalExpressionParser\UniversalExpressionParser.csproj" />-->
	</ItemGroup>

</Project>
