{
  "ToBoolean": {
    "ToBoolean_1": "$(ToBoolean(value -> ToBooleanData.InvalidBooleanText) is undefined) is true",
    "ToBoolean_2": "$(ToBoolean(ToBooleanData.TrueText1))",
    "ToBoolean_3": "$(ToBoolean('false', throwOnError -> true))",
    "ToBoolean_4": "$(ToBoolean('False', throwOnError -> true))"
  },
  "ToDateTime": {
    "ToDateTime_1": "$(ToDateTime(value -> ToDateTimeData.InvalidDateTimeText) is undefined) is true",
    "ToDateTime_2": "$value(ToDateTime(ToDateTimeData.DateTimeText1, throwOnError -> true))",
    "ToDateTime_3": "$value(ToDateTime('2022-05-23', throwOnError -> true))",
    "ToDateTime_4": "$value(ToDateTime('2022-05-23T18:25:43.511Z') < ToDateTime('2025-05-23T18:25:43.511Z'))"
  },
  "ToDate": {
    "ToDate_1": "$(ToDate(value -> ToDateData.InvalidDateTimeText) is undefined) is true",
    "ToDate_2": "$value(ToDate(ToDateData.DateTimeText1, throwOnError -> true))",
    "ToDate_3": "$value(ToDate(ToDateData.DateText1, throwOnError -> true))",
    "ToDate_4": "$value(ToDate('2022-05-23', throwOnError -> true))",
    "ToDate_5": "$value(ToDate('2022-05-23T18:25:43.511Z') < ToDate('2025-05-23T18:25:43.511Z'))",
    "ToDate_6": "$value(ToDate(ToDateData.DateTimeText1) < ToDateTime(ToDateData.DateTimeText1))"
  },
  "ToDouble": {
    "ToDouble_1": "$(ToDouble(value -> ToDoubleData.InvalidDoubleText) is undefined) is true",

    "ToDouble_2": "$value(ToDouble(ToDoubleData.DoubleText1, throwOnError -> true) == 1.36)",
    "ToDouble_3": "$value(ToDouble(ToDoubleData.NegativeDoubleText1, throwOnError -> true) == -1.36)",

    "ToDouble_4": "$value(ToDouble(ToDoubleData.IntText1))",
    "ToDouble_5": "$value(ToDouble(ToDoubleData.NegativeIntText1))",

    "ToDouble_6": "$value(ToDouble(ToDoubleData.Double1))",
    "ToDouble_7": "$value(ToDouble(ToDoubleData.NegativeDouble1))",

    "ToDouble_8": "$value(ToDouble(ToDoubleData.Int1))",
    "ToDouble_9": "$value(ToDouble(ToDoubleData.NegativeInt1))"
  },
  "ToInt": {
    "ToInt_1": "$(ToInt(value -> ToIntData.InvalidIntText) is undefined) is true",

    "ToInt_2": "$value(ToInt(ToIntData.DoubleText1, throwOnError -> true) == 17)",
    "ToInt_3": "$value(ToInt(ToIntData.NegativeDoubleText1, throwOnError -> true) == -17)",

    "ToInt_4": "$value(ToInt(ToIntData.IntText1))",
    "ToInt_5": "$value(ToInt(ToIntData.NegativeIntText1))",

    "ToInt_6": "$value(ToInt(ToIntData.Double1))",
    "ToInt_7": "$value(ToInt(ToIntData.NegativeDouble1))",

    "ToInt_8": "$value(ToInt(ToIntData.Int1))",
    "ToInt_9": "$value(ToInt(ToIntData.NegativeInt1))"
  },

  "ToString": {
    "ToString_1": "$(ToString(value -> InvalidPath) is undefined) is true",

    "ToString_2": "$value(ToString(ToStringData.Int1, throwOnError -> true) == '15')",
    "ToString_3": "$value(ToString(ToStringData.NegativeInt1, throwOnError -> true))",

    "ToString_4": "$value(ToString(ToStringData.Double1))",
    "ToString_5": "$value(ToString(ToStringData.NegativeDouble1))",

    "ToString_6": "$value(ToString(ToStringData.Text1))",

    "ToString_7": "$value(ToString(ToStringData.TrueValue))",
    "ToString_8": "'$(ToString(false))' == 'false'",

    "ToString_9": "$(ToString(ToDateTime('2022-05-23T18:25:43.511Z'))=='2022-05-23 14:25:43.5110000') is true"
  }
}