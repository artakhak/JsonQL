// Select all companies
var query = "Companies";

// Set the value of queryManager to an instance of JsonQL.Query.IQueryManager here.
// The value of JsonQL.Query.IQueryManager is normally created by Dependency Injection container 
// and it is normally configured as a singleton.
JsonQL.Query.IQueryManager queryManager = null!;

// The result "companiesResult" is a list of list. Each company is represented as list of employees
// The result of type "List<IReadOnlyList<IEmployee?>?>" cannot be null,
// however list of employees can be null, and each employee in list of employees can be null too,
// according to value used for parameter "convertedValueNullability"
var companiesResult =
    queryManager.QueryObject<List<IReadOnlyList<IEmployee?>?>>(query,
        new JsonTextData("Companies",
            this.LoadExampleJsonFile("CompaniesOrganizedAsArraysOfArrays.json")),
            convertedValueNullability: [
            // The result of type "List<IReadOnlyList<IEmployee?>?>" cannot be null.
            // An error will be reported if the result is null
            false,
            // "IReadOnlyList<IEmployee?>" items in "List<IReadOnlyList<IEmployee?>?>" can be null
            true,
            // "IEmployee" items in "IReadOnlyList<IEmployee?>" can be null.
            true]);
