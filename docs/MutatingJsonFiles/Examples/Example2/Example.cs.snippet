string[] sharedExamplesFolderPath = new string[] { "DocFiles", "MutatingJsonFiles", "Examples"};

var parametersJsonTextData = new JsonTextData("Parameters",
            this.LoadExampleJsonFile("Parameters.json"));

// countriesJsonTextData uses parametersJsonTextData for parameter parentJsonTextData
var countriesJsonTextData = new JsonTextData("Countries",
    LoadJsonFileHelpers.LoadJsonFile("Countries.json", sharedExamplesFolderPath), parametersJsonTextData);

var companiesJsonTextData = new JsonTextData("Companies",
    LoadJsonFileHelpers.LoadJsonFile("Companies.json", sharedExamplesFolderPath), countriesJsonTextData);

var filteredCompaniesJsonTextData = new JsonTextData("FilteredCompanies",
    this.LoadExampleJsonFile("FilteredCompanies.json"), companiesJsonTextData);      

// Create an instance of JsonQL.Compilation.JsonCompiler here.
// This is normally done once on application start.
JsonQL.Compilation.IJsonCompiler jsonCompiler = null!;

var result = jsonCompiler.Compile(new JsonTextData("Example",
    this.LoadExampleJsonFile("Example.json"), filteredCompaniesJsonTextData));

var parametersJsonTextData = new JsonTextData("Parameters", this.LoadExampleJsonFile("Parameters.json"));

var countriesJsonTextData = new JsonTextData("Countries",
            LoadJsonFileHelpers.LoadJsonFile("Countries.json", sharedExamplesFolderPath), parametersJsonTextData);

var companiesJsonTextData = new JsonTextData("Companies",
    LoadJsonFileHelpers.LoadJsonFile("Companies.json", sharedExamplesFolderPath), countriesJsonTextData);

var cachedCompilationResult = _jsonCompiler.Compile(new JsonTextData("FilteredCompanies",
    this.LoadExampleJsonFile("FilteredCompanies.json"), companiesJsonTextData));

if (cachedCompilationResult.CompilationErrors.Count > 0)
    throw new ApplicationException("Compilation failed");

var compiledParents = new List<ICompiledJsonData>
{
    cachedCompilationResult.CompiledJsonFiles.First(x => x.TextIdentifier == "Companies")
};

var jsonThatDependsOnCompanies = 
    string.Concat("{\"AllCompanyNames:\": \"$value(Companies.Select(x => x.CompanyData.Name))\"," +
    "\"AllCompanyEmployees:\": \"$value(Companies.Where(x => !(x.CompanyData.Name starts with 'Strange')).Select(x => x.Employees))\"}");

var jsonThatDependsOnCompaniesResult = _jsonCompiler.Compile(jsonThatDependsOnCompanies, "Json1", compiledParents);
// Do something with jsonThatDependsOnCompaniesResult here.

compiledParents = new List<ICompiledJsonData>
{
    cachedCompilationResult.CompiledJsonFiles.First(x => x.TextIdentifier == "Parameters"),
    cachedCompilationResult.CompiledJsonFiles.First(x => x.TextIdentifier == "Countries"),
    cachedCompilationResult.CompiledJsonFiles.First(x => x.TextIdentifier == "Companies"),
    cachedCompilationResult.CompiledJsonFiles.First(x => x.TextIdentifier == "FilteredCompanies"),
};

var exampleJsonResult = _jsonCompiler.Compile(this.LoadExampleJsonFile("Example.json"), "Example", compiledParents);
