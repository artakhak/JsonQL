{
  "Object1": {
    "EvenNumbersArray": [
      2,
      4,
      "Test",
      [ 1, 3 ],
      6,
      10
    ],

    "Array1": [
      1,
      2,
      "Test",
      {
        "EmployeeId": 1
      },
      [ 5, "test", 20 ],
      6,
      13,
      4
    ],
    "Object2": [
      { "Value": 1 },
      { "Value": 3 },
      { "Value": 2 },
      { "Value": 9 },
      { "Test": 17 }
    ],
    "DateTimeValues": [ "2022-05-23T18:25:43.511Z", "2025-08-23T13:15:15.355Z", "2025-08-23T13:16:15.355Z" ]
  },
  "SelectAllEmployeeIds": [
    "$merge(parent.Object1.Companies.Where(x => Any(x, y => y.Name == 'Company1' || y.Name == 'Company3')).Flatten().Select(x => x.EmployeeId))"
  ],
  "SelectAllEmployeeIds_WithSalariesGreaterThan_80000": [
    "$merge(parent.Object1.Companies.Where(x => Any(x, y => y.Name == 'Company1' || y.Name == 'Company3')).Flatten().Where(x => x.Salary > 80000).Select(x => x.EmployeeId))"
  ],
  "SelectAllEmployeeAddresses_WithSalariesGreaterThan_80000": [
    "$merge(parent.Object1.Companies.Where(x => Any(x, y => y.Name == 'Company1' || y.Name == 'Company3')).Flatten().Where(x => x.Salary > 80000).Select(x => x.Address))"
  ],
  "SelectAllEmployeeStreets_WithSalariesGreaterThan_80000": [
    "$merge(parent.Object1.Companies.Where(x => Any(x, y => y.Name == 'Company1' || y.Name == 'Company3')).Flatten().Where(x => x.Salary > 80000).Select(x => x.Address.Street))"
  ],
  "SelectAllEmployeeAddresses_WithSalariesGreaterThan_80000_InCity1_or_City3_1": [
    "$merge(parent.Object1.Companies.Where(x => Any(x, y => y.Name == 'Company1' || y.Name == 'Company3')).Flatten().Where(x => x.Salary > 80000).Select(x => x.Address).Where(x => x.City == 'City 1' || x.City == 'City 3'))"
  ],
  "AverageEmpoyeeAgee_In_Company_1_or_Company3": "$(Average(parent.Object1.Companies.Where(x => Any(x, y => y.Name == 'Company1' || y.Name == 'Company3')).Flatten().Select(x => x.Age)))",
  "MaxNumberOfHomesOfEmployees_In_Company_1_or_Company3": "$(Max(parent.Object1.Companies.Where(x => Any(x, y => y.Name == 'Company1' || y.Name == 'Company3')).Flatten().Select(x => x.Assets.NumberOfHomes)))",

  "SelectWithWhere": [
    "$merge(Object1.Select(x => x.Object2.Where(y => HasField(y, 'Value'))))"
  ],

  "AverageSalaryAcrossCompanies": {
    "Comment": "This query uses Companies in 'SharedJsonFiles/CompaniesAsArrayInJson.json'",
    "AverageSalary": "$(Average(Companies.Select(x => x.Employees.Select(x => x.Salary))))"
  },
  "RaisedSalariesOfAllCompanyEmployees": "$value(parent.Object1.Companies.Select(c => c.Where(x => HasField(x, 'EmployeeId')).Select(e => 2 * e.Salary).Where(s => s > 170000)))",
  "MaxSalariesOfCompanies": "$value(parent.Object1.Companies.Select(c => Max(c.Where(x => HasField(x, 'EmployeeId')).Select(e => e.Salary))))",
  "CompanyNamesWithMaxSalary": "$value(parent.Object1.Companies.Select(c => Concatenate(c[0].Name, ', MaxSalary:', Max(c.Where(e => index > 0).Select(e => e.Salary)))))",
  "DateTimeExpressionsInSelect": "$value(Object1.DateTimeValues.Select(x => ToDate(x)))",
  "BooleanExpressionsInSelect": "$value(parent.Object1.Companies.Select(c => 150000 <= Max(c.Where(x => HasField(x, 'EmployeeId')).Select(e => e.Salary))))"
}
