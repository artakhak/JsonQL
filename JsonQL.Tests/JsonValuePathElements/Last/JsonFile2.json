{
  "Object1": {
    "EvenNumbersArray": [
      2,
      4,
      "Test",
      [ 1, 3 ],
      6,
      10
    ],

    "Array1": [
      1,
      2,
      "Test",
      {
        "EmployeeId": 1
      },
      [ 5, "test", 20 ],
      6,
      13,
      4
    ],
    "EmptyArray": []
  },
  "Comment_Line1": "NOTE: Array indexers can be applied only to arrays, and not on collections resulted from using Where(), Flatten() and others,",
  "Comment_Line2": "and the following expression will not work",
  "Comment_Line3": "(Object1.Array1.Where(x => x != 4)[6]))",
  "Comment_Line4": "and At(6) or Last() function should be used instead as shown below",
  "Get_Last_Item_In_Result_Of_Where": "$value(Object1.Array1.Where(x => x != 4).Last())",

  "GetLastEmployeeWithSalaryGreaterThan_100000": "$value(parent.Object1.Companies.Flatten().Where(x => x.EmployeeId > 0 && x.Salary > 100000).Last())",
  "GetLastItemInArray": "$(Object1.Array1.Last())",
  "Predicate_In_Last_GetLastItemInArray_NotEqualTo_4": "$(Object1.Array1.Last(x => x != 4))",
  "Predicate_In_Last_FirstCompanyWithLastEmployeeId_202": "$value parent.Object1.Companies.First(x => x.Last(x => !HasField(x, 'Name')).EmployeeId == 202)"
}
